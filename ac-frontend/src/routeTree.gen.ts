/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SuperAdminRouteImport } from './routes/_superAdmin'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as IndexRouteImport } from './routes/index'
import { Route as LoginIndexRouteImport } from './routes/login/index'
import { Route as SuperAdminAdminCatalogManagementRouteImport } from './routes/_superAdmin.admin/catalogManagement'

const SuperAdminRoute = SuperAdminRouteImport.update({
  id: '/_superAdmin',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginIndexRoute = LoginIndexRouteImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRouteImport,
} as any)
const SuperAdminAdminCatalogManagementRoute =
  SuperAdminAdminCatalogManagementRouteImport.update({
    id: '/admin/catalogManagement',
    path: '/admin/catalogManagement',
    getParentRoute: () => SuperAdminRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginIndexRoute
  '/admin/catalogManagement': typeof SuperAdminAdminCatalogManagementRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginIndexRoute
  '/admin/catalogManagement': typeof SuperAdminAdminCatalogManagementRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRoute
  '/_superAdmin': typeof SuperAdminRouteWithChildren
  '/login/': typeof LoginIndexRoute
  '/_superAdmin/admin/catalogManagement': typeof SuperAdminAdminCatalogManagementRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/login' | '/admin/catalogManagement'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/login' | '/admin/catalogManagement'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/_superAdmin'
    | '/login/'
    | '/_superAdmin/admin/catalogManagement'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRoute
  SuperAdminRoute: typeof SuperAdminRouteWithChildren
  LoginIndexRoute: typeof LoginIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_superAdmin': {
      id: '/_superAdmin'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof SuperAdminRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_superAdmin/admin/catalogManagement': {
      id: '/_superAdmin/admin/catalogManagement'
      path: '/admin/catalogManagement'
      fullPath: '/admin/catalogManagement'
      preLoaderRoute: typeof SuperAdminAdminCatalogManagementRouteImport
      parentRoute: typeof SuperAdminRoute
    }
  }
}

interface SuperAdminRouteChildren {
  SuperAdminAdminCatalogManagementRoute: typeof SuperAdminAdminCatalogManagementRoute
}

const SuperAdminRouteChildren: SuperAdminRouteChildren = {
  SuperAdminAdminCatalogManagementRoute: SuperAdminAdminCatalogManagementRoute,
}

const SuperAdminRouteWithChildren = SuperAdminRoute._addFileChildren(
  SuperAdminRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRoute,
  SuperAdminRoute: SuperAdminRouteWithChildren,
  LoginIndexRoute: LoginIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
